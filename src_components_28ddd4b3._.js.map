{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lucas/Downloads/EvoGenAlg%20%281%29/frontend/src/components/PromptInput.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, ChangeEvent, KeyboardEvent } from 'react';\r\n\r\ninterface PromptInputProps {\r\n  onSend: (prompt: string) => void;\r\n}\r\n\r\nconst PromptInput: React.FC<PromptInputProps> = ({ onSend }) => {\r\n  const [prompt, setPrompt] = useState('');\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setPrompt(event.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (prompt.trim()) {\r\n      onSend(prompt.trim());\r\n      setPrompt('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"rounded-2xl shadow-md bg-gray-100 p-4\">\r\n      <textarea\r\n        className=\"w-full rounded-xl p-2 border-2 border-gray-300 focus:border-blue-500 resize-none outline-none\"\r\n        placeholder=\"Escribe tu prompt aquÃ­, incluyendo instrucciones detalladas, contexto, y objetivos...\"\r\n        value={prompt}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        rows={1} // Initial row count\r\n      />\r\n      <button\r\n        className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Enviar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromptInput;\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAOA,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE;IACzD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,eAAe,CAAC;QACpB,UAAU,MAAM,MAAM,CAAC,KAAK;IAC9B;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,MAAM,GAAG,KAAK,WAAW,CAAC,MAAM,QAAQ,EAAE;YAC5C,MAAM,cAAc;YACpB;QACF;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,OAAO,IAAI,IAAI;YACjB,OAAO,OAAO,IAAI;YAClB,UAAU;QACZ;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAW;gBACX,MAAM;;;;;;0BAER,8OAAC;gBACC,WAAU;gBACV,SAAS;0BACV;;;;;;;;;;;;AAKP;uCAEe","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lucas/Downloads/EvoGenAlg%20%281%29/frontend/src/components/ResponseArea.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm'; // For GFM (tables, strikethrough, etc.)\r\nimport { motion } from 'framer-motion'; // For animations\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n}\r\n\r\ninterface ResponseAreaProps {\r\n  messages: Message[];\r\n}\r\n\r\nconst ResponseArea: React.FC<ResponseAreaProps> = ({ messages }) => {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {messages.map((message, index) => (\r\n        <motion.div\r\n          key={index}\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: index * 0.1 }}\r\n          className={`p-4 rounded-2xl shadow-md ${\r\n            message.isUser ? 'bg-blue-100 text-gray-800' : 'bg-gray-100 text-gray-800'\r\n          }`}\r\n        >\r\n          <ReactMarkdown\r\n            children={message.text}\r\n            remarkPlugins={[remarkGfm]}\r\n            components={{\r\n              // Customize rendering of specific Markdown elements if needed\r\n              h1: ({ node, ...props }) => <h1 className=\"text-2xl font-bold mt-2 mb-2\" {...props} />,\r\n              h2: ({ node, ...props }) => <h2 className=\"text-xl font-bold mt-2 mb-2\" {...props} />,\r\n              h3: ({ node, ...props }) => <h3 className=\"text-lg font-bold mt-2 mb-2\" {...props} />,\r\n              a: ({ node, ...props }) => <a className=\"text-blue-500 hover:underline\" {...props} />,\r\n              // Add more customizations as needed\r\n            }}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponseArea;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,oUAAwC,iBAAiB;;;;;AAWzD,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IAC7D,qBACE,8OAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBAET,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;oBAAK,OAAO,QAAQ;gBAAI;gBAChD,WAAW,CAAC,0BAA0B,EACpC,QAAQ,MAAM,GAAG,8BAA8B,6BAC/C;0BAEF,cAAA,8OAAC;oBACC,UAAU,QAAQ,IAAI;oBACtB,eAAe;wBAAC;qBAAU;oBAC1B,YAAY;wBACV,8DAA8D;wBAC9D,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,iBAAK,8OAAC;gCAAG,WAAU;gCAAgC,GAAG,KAAK;;;;;;wBAClF,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,iBAAK,8OAAC;gCAAG,WAAU;gCAA+B,GAAG,KAAK;;;;;;wBACjF,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,iBAAK,8OAAC;gCAAG,WAAU;gCAA+B,GAAG,KAAK;;;;;;wBACjF,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,iBAAK,8OAAC;gCAAE,WAAU;gCAAiC,GAAG,KAAK;;;;;;oBAEnF;;;;;;eAlBG;;;;;;;;;;AAwBf;uCAEe","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lucas/Downloads/EvoGenAlg%20%281%29/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport PromptInput from './PromptInput';\r\nimport ResponseArea from './ResponseArea';\r\n\r\ninterface Message {\r\n  text: string;\r\n  isUser: boolean;\r\n}\r\n\r\nconst ChatInterface: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n  const handleSend = async (prompt: string) => {\r\n    // Add user message\r\n    const newUserMessage: Message = { text: prompt, isUser: true };\r\n    setMessages((prevMessages) => [...prevMessages, newUserMessage]);\r\n\r\n    // Simulate AI response (replace with actual API call later)\r\n    const aiResponse = await simulateAiResponse(prompt);\r\n    const newAiMessage: Message = { text: aiResponse, isUser: false };\r\n    setMessages((prevMessages) => [...prevMessages, newAiMessage]);\r\n  };\r\n\r\n  const simulateAiResponse = (prompt: string): Promise<string> => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Replace with actual AI logic\r\n        const response = `AI Response to: ${prompt}`;\r\n        resolve(response);\r\n      }, 1000); // Simulate a delay\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-4\">\r\n      <ResponseArea messages={messages} />\r\n      <PromptInput onSend={handleSend} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAUA,MAAM,gBAA0B;IAC9B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,MAAM,aAAa,OAAO;QACxB,mBAAmB;QACnB,MAAM,iBAA0B;YAAE,MAAM;YAAQ,QAAQ;QAAK;QAC7D,YAAY,CAAC,eAAiB;mBAAI;gBAAc;aAAe;QAE/D,4DAA4D;QAC5D,MAAM,aAAa,MAAM,mBAAmB;QAC5C,MAAM,eAAwB;YAAE,MAAM;YAAY,QAAQ;QAAM;QAChE,YAAY,CAAC,eAAiB;mBAAI;gBAAc;aAAa;IAC/D;IAEA,MAAM,qBAAqB,CAAC;QAC1B,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,+BAA+B;gBAC/B,MAAM,WAAW,CAAC,gBAAgB,EAAE,QAAQ;gBAC5C,QAAQ;YACV,GAAG,OAAO,mBAAmB;QAC/B;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,kIAAA,CAAA,UAAY;gBAAC,UAAU;;;;;;0BACxB,8OAAC,iIAAA,CAAA,UAAW;gBAAC,QAAQ;;;;;;;;;;;;AAG3B;uCAEe","debugId":null}}]
}